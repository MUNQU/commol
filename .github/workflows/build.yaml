name: Build

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    name: Build on ${{ matrix.os }} (Python ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ matrix.python-version }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Poetry
        run: |
          pip install poetry

      - name: Install Python dependencies
        working-directory: ./py-commol
        run: |
          poetry install --extras dev

      - name: Build and install for testing
        working-directory: ./py-commol
        run: |
          poetry run maturin develop --release

      - name: Run tests
        working-directory: ./py-commol
        run: |
          poetry run pytest

      - name: Clean Rust extension before wheel build
        working-directory: ./py-commol
        shell: bash
        run: |
          rm -f commol/commol_rs/commol_rs.*.so commol/commol_rs/commol_rs.*.pyd

      - name: Build wheel
        working-directory: ./py-commol
        run: |
          poetry run maturin build --release

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: target/wheels/*.whl
